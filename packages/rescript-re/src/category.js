// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml from "@rescript/std/lib/es6/caml.js";
import * as Format from "./Format.js";

function equal(x, y) {
  return x === y;
}

var compare = Caml.caml_int_compare;

function to_int(x) {
  return x;
}

function intersect(x, y) {
  return (x & y) !== 0;
}

function $caret(x, y) {
  return x | y;
}

function from_char(param) {
  if (param >= 170) {
    if (param >= 187) {
      if (param > 246 || param < 192) {
        if (param >= 248) {
          return 2;
        } else {
          return 4;
        }
      } else if (param !== 215) {
        return 2;
      } else {
        return 4;
      }
    } else if (!(param > 185 || param < 171) && param !== 181) {
      return 4;
    } else {
      return 2;
    }
  } else if (param >= 65) {
    if (param > 96 || param < 91) {
      if (param >= 123) {
        return 4;
      } else {
        return 2;
      }
    } else if (param !== 95) {
      return 4;
    } else {
      return 2;
    }
  } else if (param >= 48) {
    if (param >= 58) {
      return 4;
    } else {
      return 2;
    }
  } else if (param !== 10) {
    return 4;
  } else {
    return 12;
  }
}

var dummy = -1;

var inexistant = 1;

var letter = 2;

var not_letter = 4;

var newline = 8;

var lastnewline = 16;

var search_boundary = 32;

var pp = Format.pp_print_int;

export {
  $caret ,
  from_char ,
  dummy ,
  inexistant ,
  letter ,
  not_letter ,
  newline ,
  lastnewline ,
  search_boundary ,
  to_int ,
  equal ,
  compare ,
  intersect ,
  pp ,
  
}
/* Format Not a pure module */
